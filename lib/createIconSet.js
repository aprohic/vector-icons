var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _possibleConstructorReturn2=_interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2=_interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _inherits2=_interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _react=_interopRequireDefault(require("react"));var _reactNative=require("react-native");var Font=_interopRequireWildcard(require("expo-font"));var _createIconSet=_interopRequireDefault(require("../vendor/react-native-vector-icons/build/create-icon-set"));var _iconButton=_interopRequireDefault(require("../vendor/react-native-vector-icons/build/icon-button"));var _jsxFileName="/Users/ahmed/work/misc/vector-icons/src/createIconSet.js";function _default(glyphMap,fontName,expoAssetId){var font=(0,_defineProperty2.default)({},fontName,expoAssetId);var RNVIconComponent=(0,_createIconSet.default)(glyphMap,fontName);var Icon=function(_React$Component){(0,_inherits2.default)(Icon,_React$Component);function Icon(props){var _this;(0,_classCallCheck2.default)(this,Icon);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(Icon).call(this,props));_this.state={fontIsLoaded:Font.isLoaded(fontName)};return _this;}(0,_createClass2.default)(Icon,[{key:"componentWillMount",value:function componentWillMount(){return _regenerator.default.async(function componentWillMount$(_context){while(1){switch(_context.prev=_context.next){case 0:this._mounted=true;if(this.state.fontIsLoaded){_context.next=5;break;}_context.next=4;return _regenerator.default.awrap(Font.loadAsync(font));case 4:this._mounted&&this.setState({fontIsLoaded:true});case 5:case"end":return _context.stop();}}},null,this);}},{key:"componentWillUnmount",value:function componentWillUnmount(){this._mounted=false;}},{key:"setNativeProps",value:function setNativeProps(props){if(this._icon){this._icon.setNativeProps(props);}}},{key:"render",value:function render(){var _this2=this;if(!this.state.fontIsLoaded){return _react.default.createElement(_reactNative.Text,{__source:{fileName:_jsxFileName,lineNumber:41}});}return _react.default.createElement(RNVIconComponent,(0,_extends2.default)({ref:function ref(view){_this2._icon=view;}},this.props,{__source:{fileName:_jsxFileName,lineNumber:45}}));}}]);return Icon;}(_react.default.Component);Icon.propTypes=RNVIconComponent.propTypes;Icon.defaultProps=RNVIconComponent.defaultProps;function getRawGlyphMap(){return glyphMap;}Icon.Button=(0,_iconButton.default)(Icon);Icon.glyphMap=glyphMap;Icon.getRawGlyphMap=getRawGlyphMap;Icon.getFontFamily=function(){return fontName;};Icon.loadFont=function(){return Font.loadAsync(font);};Icon.font=font;return Icon;}